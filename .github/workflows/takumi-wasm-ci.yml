name: Takumi WASM CI

env:
  CARGO_INCREMENTAL: "0"

permissions:
  contents: write
  id-token: write

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            takumi-wasm/target/
          key: wasm32-unknown-unknown-cargo-ubuntu-latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build WASM
        working-directory: takumi-wasm
        run: wasm-pack build --target web --out-dir pkg

      - name: Update package.json name for npm publish
        working-directory: takumi-wasm/pkg
        run: |
          # Change package name from takumi-wasm to @takumi/wasm
          jq '.name = "@takumi/wasm"' package.json > temp.json && mv temp.json package.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wasm-package
          path: |
            takumi-wasm/pkg/*
          if-no-files-found: error

  test:
    name: Test WASM
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build helpers
        run: |
          cd takumi-helpers
          bun run build
          cd ../takumi-wasm

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-package
          path: takumi-wasm/pkg

      - name: Test WASM
        working-directory: takumi-wasm
        run: bun test

  version-check:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      version-exists: ${{ steps.check.outputs.exists }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-package
          path: takumi-wasm/pkg/package.json

      - name: Check if version exists
        id: check
        working-directory: takumi-wasm/pkg
        run: |
          PACKAGE_NAME=$(node -pe "require('./package.json').name")
          PACKAGE_VERSION=$(node -pe "require('./package.json').version")
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          echo $GITHUB_OUTPUT

  publish:
    needs: [build, test, version-check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && needs.version-check.outputs.version-exists == 'false'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-package
          path: takumi-wasm/pkg

      - uses: actions/setup-node@v4

      - name: Publish
        working-directory: takumi-wasm/pkg
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish --access public --provenance
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
