name: Takumi NAPI Core CI

env:
  DEBUG: napi:*
  APP_NAME: core
  MACOSX_DEPLOYMENT_TARGET: "10.13"
  CARGO_INCREMENTAL: "1"

permissions:
  contents: write
  id-token: write

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: aarch64-apple-darwin
            build: bun run build --target aarch64-apple-darwin
          - host: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            build: bun run build --target aarch64-unknown-linux-gnu
          - host: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            build: bun run build --target aarch64-unknown-linux-musl -x
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: bun run build --target x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            build: bun run build --target x86_64-unknown-linux-musl -x

    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: takumi-napi-core
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            takumi-napi-core/target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ contains(matrix.settings.target, 'musl') }}
        with:
          version: 0.14.1
      - name: Install cargo-zigbuild
        uses: taiki-e/install-action@v2
        if: ${{ contains(matrix.settings.target, 'musl') }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tool: cargo-zigbuild

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: |
            takumi-napi-core/${{ env.APP_NAME }}.*.node
            takumi-napi-core/index.js
            takumi-napi-core/index.d.ts
          if-no-files-found: error

  test-bindings:
    name: Test ${{ matrix.settings.target }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: aarch64-apple-darwin
            architecture: arm64
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            architecture: x64
          - host: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            architecture: arm64
          - host: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            architecture: arm64
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build heleprs
        run: |
          cd takumi-helpers
          bun run build
          cd ../takumi-napi-core

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: .

      - name: List packages
        run: ls -R .

      - name: Test bindings
        run: bun test
        shell: bash
  publish:
    needs: [build, test-bindings]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts
        run: bun run artifacts

      - name: List packages
        run: ls -R ./
